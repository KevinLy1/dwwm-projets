<?php
namespace controller;

use Exception;

class Controller {
    private $dbEntityRepository;

    public function __construct() {
        $this->dbEntityRepository = new \model\EntityRepository;
    }

    public function handleRequest() {
        // On stocke la valeur de l'indice "op" transmis dans l'url
        $op = isset($_GET['op']) ? $_GET['op'] : 'list';
        try {
            if($op === 'add' || $op === 'update')
                $this->save($op); // si on ajoute ou on modifie un employ√©, la m√©thode save() sera ex√©cut√©e
            elseif($op === 'select')
                $this->select();  // si on s√©lectionne un employ√©, la m√©thode select() sera ex√©cut√©e
            elseif($op === 'delete')
                $this->delete();  // si on supprime un employ√©, la m√©thode delete() sera ex√©cut√©e
            elseif($op === 'search')
                $this->search();  // si on recheche un employ√©, la m√©thode search() sera ex√©cut√©e
            elseif($op === 'list')
                $this->selectAll(); // cas par d√©faut, la m√©thode list() sera ex√©cut√©e
            else 
                throw new Exception("La page n'a pas √©t√© trouv√© :(", 404); // en cas d'erreur, on l√®ve une exception
        } catch (\Exception $e) {
            echo '<div style="width: 400px; padding: 15px; background: #CCE5FF; border-radius: 5px; margin: 0 auto; color: white; text-align: center;">';
            echo "üõë" . $e->getCode() . " " . $e->getMessage();
            echo '</div>';
        }
    }

    // M√©thode permettant de construire une vue
    public function render($layout, $template, $parameters = []) {
        extract($parameters);
        ob_start();
        require_once "views/$template";
        $content = ob_get_clean();
        ob_start();
        require_once "views/$layout";
        
        return ob_end_flush();
    }

    // M√©thode permettant d'afficher tous les employ√©s
    public function selectAll($alert = "") {
        $this->render("layout.php", "affichage_employes.php", [
            "title" => "GESTION DES EMPLOY√âS",
            "data" => $this->dbEntityRepository->selectAllEntityRepo(),
            "fields" => $this->dbEntityRepository->getFields(),
            "id" => "id_" . $this->dbEntityRepository->table,
            "message" => "Ci-dessous, vous trouverez un tableau contenant l'ensemble des employ√©s de l'entreprise",
            "alert" => $alert
        ]);
    }

    // M√©thode permettant de s√©lectionner et d'afficher le d√©tail d'un employ√©
    public function select() {
        if(!empty($_GET["id"])) {
            $id = $_GET["id"];

            if($this->dbEntityRepository->selectEntityRepo($id)) { // s'assurer que l'id existe dans la BDD
                $this->render("layout.php", "detail_employe.php", [
                    "title" => "D√âTAIL D'UN EMPLOY√â",
                    "data" => $this->dbEntityRepository->selectEntityRepo($id),
                    "id" => "id_" . $this->dbEntityRepository->table,
                    "message" => "Ci-dessous, vous trouverez le d√©tail de l'employ√© n¬∞$id"
                ]);
            } else {
                $this->selectAll("üõë L'employ√© s√©lectionn√© n'existe pas ou l'id n'a pas √©t√© trouv√©.");
            }
        } else {
            $this->selectAll("üõë L'employ√© s√©lectionn√© n'existe pas ou l'id n'a pas √©t√© trouv√©.");
        }
    }

    // M√©thode permettant d'enregister ou de modifier un employ√©
    public function save($op) {
        $id = $_GET["id"] ?? NULL;
        $values = ($op === "update") ? $this->dbEntityRepository->selectEntityRepo($id) : "";

        if($_POST) {
            // R√©cup√©ration des donn√©es et envoi des donn√©es en base
            $this->dbEntityRepository->saveEntityRepo();
            // Renvoyer l'utilisateur sur la page d'accueil // Informer l'utilisateur que l'action est un succ√®s
            $alert = ($op === "update") ? "‚úÖ Les informations de l'employ√© n¬∞$id ont √©t√© mis √† jour avec succ√®s !" : "‚úÖ Nouvel employ√© cr√©√© avec succ√®s";
            $this->selectAll($alert);
        }

        $this->render("layout.php", "contact_form.php", [
            "title" => "Formulaire d'ajout ou de modification d'employ√©",
            "message" => "Ci-dessous, vous trouverez le formulaire pour ajouter ou modifier un employ√©",
            "op" => $op,
            "values" => $values,
            "fields" => $this->dbEntityRepository->getFields()
        ]);
    }

    // Cr√©er la m√©thode delete() permettant de supprimer un employ√© de la BDD
    // Une fois supprim√©, renvoyer l'utilisateur sur le tableau des employ√©s et informer l'utilisateur que l'action est un succ√®s
    public function delete() {
        if(!empty($_GET["id"])) {
            $id = $_GET["id"];

            if($this->dbEntityRepository->selectEntityRepo($id)) { // s'assurer que l'id existe dans la BDD
                $this->dbEntityRepository->deleteEntityRepo($id);
                $this->selectAll("‚úÖ Les informations de l'employ√© n¬∞$id ont √©t√© supprim√©es d√©finitivement.");
            } else {
                $this->selectAll("üõë L'employ√© s√©lectionn√© n'existe pas ou l'id n'a pas √©t√© trouv√©.");
            }
        } else {
            $this->selectAll("üõë L'employ√© s√©lectionn√© n'existe pas ou l'id n'a pas √©t√© trouv√©.");
        }
    }

    // Cr√©er une fonctionnalit√© recherche qui permet de trouver un employ√© avec son nom et ou son pr√©nom
    public function search() {
        if(!empty($_GET["name"])) {
            $name = $_GET["name"];

            if($this->dbEntityRepository->searchEntityRepo($name)) {
                $this->render("layout.php", "recherche.php", [
                    "title" => "R√©sultats de votre recherche",
                    "data" => $this->dbEntityRepository->searchEntityRepo($name),
                    "fields" => $this->dbEntityRepository->getFields(),
                    "id" => "id_" . $this->dbEntityRepository->table,
                    "message" => "Ci-dessous, vous trouverez les employ√©s correspondant √† vos crit√®res de recherche : \"$name\"."
                ]);
            } else {
                $this->selectAll("üõë Aucun employ√© correspondant au nom \"$name\" n'a √©t√© trouv√©.");
            }
        } else {
            $this->selectAll("Veuillez entrer un crit√®re de recherche.");
        }
    }
}